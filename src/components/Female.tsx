/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Female2.glb -o src/components/Female.tsx -r public 
*/

import * as THREE from "three";
import React, { useState } from "react";
import { PivotControls, useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Tattoo } from "./Tattoo";
import { femaleBodyPartConfigs } from "@/helper/bodyPart";

// Define the custom prop type
type FemaleProps = JSX.IntrinsicElements["group"] & {
  toggleDebug?: boolean;
  togglePivot?: boolean;
  uploadedImages?: any;
};
const parts = [
  "Forehead",
  "Ocipital",
  "LeftShoulder",
  "RightShoulder",
  "Chest",
  "Abdomen",
  "Back",
  "LeftArm",
  "RightArm",
  "LeftLeg",
  "RightLeg",
];
type GLTFResult = GLTF & {
  nodes: {
    Mannequin_Fm: THREE.Mesh;
  };
  materials: {
    ["uv.002"]: THREE.MeshStandardMaterial;
  };
};

export function Female({
  toggleDebug = false,
  togglePivot = false,
  uploadedImages,
  ...props
}: FemaleProps) {
  const { nodes, materials } = useGLTF("/models/Female.glb") as GLTFResult;
  const defaultMaterial = "./test.jpg";

  // Initialize state for all parts
  const [state, setState] = useState(() =>
    parts.reduce((acc, part) => {
      acc[part] = {
        position: [...femaleBodyPartConfigs[part].position],
        scale: [...femaleBodyPartConfigs[part].scale],
        rotation: [...femaleBodyPartConfigs[part].rotation],
      };
      return acc;
    }, {} as Record<string, { position: [number, number, number]; scale: [number, number, number]; rotation: [number, number, number] }>)
  );

  const textures = useTexture(
    parts.reduce((acc, part) => {
      acc[part] = uploadedImages[part] || defaultMaterial;
      return acc;
    }, {} as Record<string, string>)
  );
  return (
    <group {...props} dispose={null} scale={[1.5, 1.5, 1.5]}>
      <mesh
        geometry={nodes.Mannequin_Fm.geometry}
        material={materials["uv.002"]}
        material-aoMapIntensity={1}
      >
        {parts.map(
          (part) =>
            uploadedImages[part] &&
            textures[part] && (
              <React.Fragment key={part}>
                <PivotControls
                  scale={0.3}
                  activeAxes={[true, true, true]}
                  offset={[
                    femaleBodyPartConfigs[part]["position"][0] + 0.5,
                    femaleBodyPartConfigs[part]["position"][1],
                    femaleBodyPartConfigs[part]["position"][2],
                  ]}
                  visible={togglePivot}
                  onDrag={(local) => {
                    const position = new THREE.Vector3();
                    const scale = new THREE.Vector3();
                    const quaternion = new THREE.Quaternion();
                    local.decompose(position, quaternion, scale);
                    const rotation = new THREE.Euler().setFromQuaternion(
                      quaternion
                    );
                    setState((prev) => ({
                      ...prev,
                      [part]: {
                        position: [
                          position.x + femaleBodyPartConfigs[part].position[0],
                          position.y + femaleBodyPartConfigs[part].position[1],
                          position.z + femaleBodyPartConfigs[part].position[2],
                        ],
                        scale: [
                          femaleBodyPartConfigs[part].scale[0] * scale.x,
                          femaleBodyPartConfigs[part].scale[1] * scale.y,
                          femaleBodyPartConfigs[part].scale[2] * scale.z,
                        ],
                        rotation: [
                          rotation.x + femaleBodyPartConfigs[part].rotation[0],
                          rotation.y + femaleBodyPartConfigs[part].rotation[1],
                          rotation.z + femaleBodyPartConfigs[part].rotation[2],
                        ],
                      },
                    }));
                  }}
                />
                <Tattoo
                  position={state[part].position}
                  scale={state[part].scale}
                  rotation={state[part].rotation}
                  debugMode={toggleDebug}
                  tattoo={textures[part]}
                />
              </React.Fragment>
            )
        )}
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/Female.glb");
